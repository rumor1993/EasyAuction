GRANT CREATE ANY JOB TO scott

CREATE OR REPLACE PROCEDURE INSERT_TEST_JOB
IS
BEGIN
	INSERT INTO TEST_JOB(NUM, REGDATE)
		VALUES ((SELECT MAX(NVL(NUM, 0)) + 1 FROM TEST_JOB), SYSDATE);
		
		COMMIT;
END INSERT_TEST_JOB;

CREATE TABLE TEST_JOB(
	NUM NUMBER,
	REGDATE DATE
)

DROP PROCEDURE INSERT_TEST_JOB

SELECT * FROM TEST_JOB


DECLARE
	JOBNO NUMBER;
BEGIN
	DBMS_JOB.SUBMIT(JOBNO,
		'SCOTT.INSERT_TEST_JOB;',
		SYSDATE + 1 / 24 / 60,
		'TRUNC(SYSDATE + 1)',
		FALSE);
	COMMIT;
END; 

COMMIT

DECLARE
BEGIN
	DBMS_JOB.REMOVE(JOBNO);
	COMMIT;
END 



EXEC DBMS_JOB.REMOVE('1');

SELECT WHAT, JOB, NEXT_DATE, NEXT_SEC, FAILURES, BROKEN
FROM USER_JOBS





CREATE SEQUENCE JOB_TEST_SEQ;
DROP SEQUENCE JOB_TEST_SEQ;

CREATE TABLE JOB_TEST01(NO NUMBER, NAME VARCHAR2(10));
DROP TABLE JOB_TEST01;

CREATE OR REPLACE PROCEDURE INSERT_JOB_TEST01
IS
BEGIN
	INSERT INTO JOB_TEST01 VALUES(JOB_TEST_SEQ.NEXTVAL,
		DBMS_RANDOM.STRING('A', 3));
END ;

DROP PROCEDURE INSERT_JOB_TEST01;


DECLARE
	JNO NUMBER;
BEGIN
	DBMS_JOB.SUBMIT(JNO, 
			'INSERT_JOB_TEST01;',
			sysdate,
			'SYSDATE+1/86400',
			FALSE);
END;



DECLARE
BEGIN
	DBMS_JOB.REMOVE(JNO);
	COMMIT;
END;




SELECT * FROM USER_JOBS
SELECT * FROM JOB_TEST01

INSERT INTO JOB_TEST01 VALUES(1, 'HI')

DELETE FROM JOB_TEST01;